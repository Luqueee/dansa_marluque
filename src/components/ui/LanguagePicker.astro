---
import { languages } from '@utils/ui';
import Icon from './icons/Icon.astro';
import enStrings from '@utils/navigation.ts';
import frStrings from '@/utils/fr/navigation';
import { string } from 'astro/zod';

// Select the correct translation based on the page's lang prop:
const strings = Astro.currentLocale === 'fr' ? frStrings : enStrings;
const homeUrl = Astro.currentLocale === 'fr' ? '/fr' : '/';
---

<div class="hs-dropdown hs-dropdown-example relative inline-flex">
    <button
        id="hs-dropdown-example"
        type="button"
        class="hs-dropdown-toggle text-gray-800disabled:pointer-events-none inline-flex items-center gap-x-2 rounded-lg px-4 py-3 text-sm font-medium disabled:opacity-50 dark:border-neutral-700 dark:text-white">
        <Icon name="earth" />
        <svg
            class="size-4 hs-dropdown-open:rotate-180"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"><path d="m6 9 6 6 6-6"></path></svg
        >
    </button>

    <div
        class="hs-dropdown-menu duration z-10 mt-2 hidden w-56 min-w-60 rounded-lg bg-white p-2 opacity-0 shadow-md transition-[opacity,margin] hs-dropdown-open:opacity-100 dark:divide-neutral-700 dark:border dark:border-neutral-700 dark:bg-neutral-800"
        aria-labelledby="hs-dropdown-example">
        {
            Object.entries(languages).map(([lang, label]) => (
                <>
                    <a
                        class="flex items-center gap-x-3.5 rounded-lg px-3 py-2 text-sm text-gray-800 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 dark:focus:bg-neutral-700"
                        href={`/${lang === 'en' ? '' : lang}`}>
                        {label}
                    </a>
                </>
            ))
        }
    </div>
</div>

<!--Import the necessary Dropdown plugin-->
<!--https://preline.co/plugins/html/dropdown.html-->
<script is:inline src="/scripts/vendor/preline/dropdown/index.js"></script>
<script>
    type TLanguage = 'en' | 'fr';
    const languages: Record<TLanguage, string> = {
        en: 'English',
        fr: 'French',
    };

    document.addEventListener('DOMContentLoaded', function () {
        const dropdownButtons = document.querySelectorAll('.hs-dropdown-menu');

        dropdownButtons.forEach((dropdown) => {
            const languageLinks = dropdown.querySelectorAll('a');

            languageLinks.forEach((link) => {
                link.addEventListener('click', function (event) {
                    event.preventDefault();

                    const lang = link
                        .getAttribute('href')
                        ?.replace('/', '') as TLanguage;
                    const url = new URL(window.location.href);
                    const pathParts = url.pathname
                        .split('/')
                        .filter(
                            (part) =>
                                part && !Object.keys(languages).includes(part)
                        );

                    if (lang === url.pathname.split('/')[1]) return;

                    if (lang !== 'en') {
                        pathParts.unshift(lang);
                    }

                    url.pathname = pathParts.join('/');
                    window.location.href = url.toString();
                });
            });
        });
    });
</script>
